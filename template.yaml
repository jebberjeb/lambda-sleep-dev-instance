AWSTemplateFormatVersion: 2010-09-09
Transform:
- AWS::Serverless-2016-10-31

Resources:
  SleepLambda:
    Type: AWS::Serverless::Function
    Properties:
      #CodeUri: ./target/sleep-dev-instance-0.1.0-standalone.jar
      FunctionName: SleepDevInstance
      Handler: "com.jebbeich.sleepdevinstance::handler"
      Runtime: java8
      MemorySize: 320
      Timeout: 30
      Role: !GetAtt LambdaExecutionRole.Arn
  WakeLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: WakeDevInstance
      Handler: "com.jebbeich.wakedevinstance::handler"
      Runtime: java8
      MemorySize: 320
      Timeout: 30
      Role: !GetAtt LambdaExecutionRole.Arn


  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: root
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:*
            Resource: arn:aws:logs:*:*:*
          Statement:
          - Effect: Allow
            Action:
            - ec2:*
            - ssm:*
            - ec2messages:*
            - sns:*
            Resource: '*'

  StatesExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - !Sub states.${AWS::Region}.amazonaws.com
            Action: "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: StatesExecutionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "lambda:InvokeFunction"
                Resource: "*"

  SleepStateMachine:
    Type: "AWS::StepFunctions::StateMachine"
    Properties:
      DefinitionString:
        !Sub
          - |-
            {
              "Comment": "A Hello World AWL example using an AWS Lambda function",
              "StartAt": "HelloWorld",
              "States": {
                "HelloWorld": {
                  "Type": "Task",
                  "Resource": "${lambdaArn}",
                  "End": true
                }
              }
            }
          - {lambdaArn: !GetAtt [ SleepLambda, Arn ]}
      RoleArn: !GetAtt [ StatesExecutionRole, Arn ]
